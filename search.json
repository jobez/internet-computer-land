[
  {
    "objectID": "posts/0_hello_wallet/index.html",
    "href": "posts/0_hello_wallet/index.html",
    "title": "hello, wallet",
    "section": "",
    "text": "communication between users, applications, blockchains\nA wallet gives a user an account on a given blockchain. But implicitly it offers a way for users to communicate with it.\nHow?\nLet’s investigate our wallet object again.\n\nwallet\n\n\n\n\n\n\nWhat are these attributes of account and provider?\nA provider lets you interact with the network without signing transactions, which basically means it gives you read access.\nWhen we want write access, we communicate with our account to, in Starknet’s case, the sequencer node.\nBut how is this communication done?\nWe can be so bold as to look at starknetjs source and see that the provider object using an rpc protocol against the provider endpoint.\nSame deal with the sequencer, but it also seems that some functionality is exposed as http endpoints, i.e. callContract\nSo let’s try to follow what is happening when a user interacts with a contract on a web client.\nEssentially, starknet-js takes ownership of coordinating users to the right remote calls. In a mature blockchain ecologies, the remote calls are to an open class of processes, where processes can perform certain roles like having access to the full history of blockchain transactions or simply accepting/relaying transactions and participating in consensus.\nSo when I click the increment button and get back a transaction hash, the user’s action/agency is given an identifiable ticket in a queue of transactions that need to make it to a block for it to be finalized.\nA couple things stand out–one, is that ‘reads’ from a contract need to have some awareness of the state of users transactions of the contract at the very least, let alone the possible transactions of other users. This is something I’ll explore in subsequent posts.\nI am still unsure how well observablehq’s reactive constructs will play with ‘hooking’ into a blockchain contracts. The allure of starting out with it is offers me more joy than the full gamut react or whatever hell else is popular in js land.\nWe will see if there’s a hard limit.\nAnother is, having had a little experience with the early nft wave of Solana, when you are so lucky to have a ‘surge’ of users trying to submit transactions against the same node/rpc, you aren’t going to have a good time. There were a lot of cases of quiet failure.\nSo the question of the best of all ways to provide your users the smoothest experience with a blockchain might involve a little devops.\nOnward."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "internet computer land",
    "section": "",
    "text": "No matching items"
  }
]